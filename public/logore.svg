<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   viewBox="0 0 1110 1888"
   id="svg2209"
   sodipodi:docname="logore.svg"
   inkscape:version="1.0.2-2 (e86c870879, 2021-01-15)">
  <metadata
     id="metadata2215">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <defs
     id="defs2213">
    <meshgradient
       inkscape:collect="always"
       id="meshgradient2800"
       gradientUnits="userSpaceOnUse"
       x="128.06836"
       y="1232.5504">
      <meshrow
         id="meshrow2802">
        <meshpatch
           id="meshpatch2804">
          <stop
             path="c 314.301,0  628.603,0  942.904,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop2806" />
          <stop
             path="c 0,61.0358  0,122.072  0,183.107"
             style="stop-color:#feb32d;stop-opacity:1"
             id="stop2808" />
          <stop
             path="c -314.301,0  -628.603,0  -942.904,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop2810" />
          <stop
             path="c 0,-61.0358  0,-122.072  0,-183.107"
             style="stop-color:#feb32d;stop-opacity:1"
             id="stop2812" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1920"
     inkscape:window-height="1001"
     id="namedview2211"
     showgrid="false"
     inkscape:zoom="0.44164798"
     inkscape:cx="237.51113"
     inkscape:cy="836.22709"
     inkscape:window-x="-9"
     inkscape:window-y="-9"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg2209" />
  <path
     fill="#fd731d"
     d="m 571.19496,218.62984 q -0.97195,40.44206 1.41569,80.82073 l 0.16905,90.32907 -0.16905,37.50506 q -0.38034,-14.68508 -0.86631,-29.37015 -0.12684,-3.57092 -1.26778,-5.47257 -1.58472,-2.68347 -4.41609,-3.95124 -6.12758,-2.76798 -6.12758,-2.76798 -5.36692,-4.01463 -7.64892,-10.64932 a 1.3945541,1.7326277 86.4 0 0 -1.37343,-0.97196 q -1.20437,-0.14791 -1.90166,-1.22552 -0.31693,-53.60581 0.31695,-107.19049 0,-0.12684 0.57049,-20.13652 0.33809,-11.5579 -0.16902,-23.09466 -0.46486,-10.29012 6.59243,-17.47417 4.31044,-1.9228 8.05038,1.37341 5.97967,5.26128 6.82485,12.27631 z m -8.38845,-1.16213 q -4.54287,-5.21902 -5.95854,1.16213 -0.73954,3.3596 -0.10555,15.88946 0.0422,0.80293 -0.19018,4.12027 -0.31694,5.04998 4.54287,2.55669 a 2.1340902,1.9227943 81.9 0 0 1.05647,-1.5636 l 2.45104,-16.0585 q 0.50711,-3.46525 -1.79602,-6.10645 z"
     id="path2105"
     style="stroke-width:2.11296" />
  <path
     fill="#fb661b"
     d="m 562.80651,217.46771 q 2.30314,2.6412 1.79602,6.10645 l -2.45104,16.0585 a 2.1340902,1.9227943 81.9 0 1 -1.05647,1.5636 q -4.85981,2.49329 -4.54287,-2.55669 0.23242,-3.31734 0.19018,-4.12027 -0.6339,-12.52986 0.10555,-15.88946 1.41568,-6.38115 5.95855,-1.16213 z"
     id="path2107"
     style="stroke-width:2.11296" />
  <path
     fill="#fbbc41"
     d="m 646.03603,287.30105 6.50794,7.39537 q -7.50104,0.16904 -13.73426,4.22591 l 0.44373,-14.30473 q 0.1479,-4.22593 3.08492,-1.16213 z"
     id="path2109"
     style="stroke-width:2.11296" />
  <path
     fill="#fd731d"
     d="m 481.39415,286.24458 q 1.69037,77.12307 0.88743,154.24612 -0.2113,4.3527 -2.15521,7.94474 a 0.88744347,0.84518425 34.2 0 1 -1.33117,0.21128 q -5.4937,-4.43721 -12.67777,-4.52173 -2.87363,-0.0422 -4.12027,-1.11987 -1.75375,-1.52132 -2.26087,-4.09914 0.12684,-64.71999 -0.61276,-129.41884 -0.0634,-6.44452 4.71191,-11.02966 3.14831,-3.04266 3.33848,-3.25396 4.41609,-4.79642 8.93782,-9.48718 3.63429,-3.9935 5.28241,0.52824 z"
     id="path2111"
     style="stroke-width:2.11296" />
  <path
     fill="#fa9b20"
     d="m 652.54397,294.69642 8.70538,10.33238 a 1.9227943,3.2962186 13.8 0 1 0.5705,1.94391 l 0.0634,88.08934 -0.73954,-4.26817 a 0.78179544,0.84518425 71.5 0 0 -1.18326,-0.52825 q -6.52906,3.14831 -11.11418,-2.78911 a 2.9158857,3.3384777 82.3 0 0 -1.66924,-1.09874 q -1.90165,-0.50711 -3.44412,-1.71149 a 3.5709034,2.0495718 89.9 0 1 -0.99309,-1.73264 q -0.97197,-3.61317 -4.45835,-5.30352 l 0.52824,-78.7078 q 6.23323,-4.05687 13.73425,-4.22591 z"
     id="path2113"
     style="stroke-width:2.11296" />
  <path
     fill="#ff9121"
     d="m 549.00888,372.87596 q 0.69729,1.07761 1.90166,1.22552 a 1.3945541,1.7326277 86.4 0 1 1.37343,0.97196 q 2.282,6.63469 7.64892,10.64932 0,0 6.12758,2.76798 2.83137,1.26777 4.41609,3.95124 1.14101,1.90165 1.26778,5.47257 0.48597,14.68507 0.86631,29.37015 v 34.86385 q -0.54937,5.81064 -1.31004,11.57902 -0.27467,2.13409 -0.31694,-1.43681 a 1.4790724,1.4790724 0 0 0 -1.73262,-1.43682 q -6.88825,1.18327 -10.29012,-5.85289 -1.18326,-2.42992 -1.81715,-1.81716 a 0.44372173,0.61275858 53.7 0 1 -0.86632,0 q -3.97236,-8.81104 -5.47256,-18.31935 -0.16904,-0.9931 -0.21129,-0.0212 -0.3592,6.80373 -1.58473,-2.76797 z"
     id="path2115"
     style="stroke-width:2.11296" />
  <path
     fill="#ffca4c"
     d="m 742.17575,382.91253 q 8.15603,6.36001 9.86752,15.55139 0.25355,1.26778 0.25355,17.53757 0.0634,52.90853 -0.0845,105.83821 0.57051,-11.38888 -1.98617,-6.10647 a 1.7960166,1.9439238 12 0 1 -1.50022,1.05648 q -7.16292,0.48599 -13.58632,-2.76797 a 2.6623304,3.6765515 62.5 0 0 -1.98619,-0.29582 q -3.08493,0.38033 -4.54286,-2.45104 l -0.0845,-136.20144 q 0,-4.22592 3.02151,-1.56358 z"
     id="path2117"
     style="stroke-width:2.11296" />
  <path
     fill="#fb661b"
     d="m 391.42428,551.42113 q -1.4368,0.10556 -1.37343,-0.92969 0.33808,-5.72612 -4.01463,-7.88135 -4.16252,-2.07069 -4.35269,-2.21861 -3.33848,-2.28199 -6.55018,-4.71191 -0.21129,-0.16902 -1.18327,-1.16212 -1.14098,-1.20438 -1.98617,0.52824 -1.79601,3.71882 -2.11297,0 l -1.50019,-17.96016 q -0.71841,-58.35997 0.84518,-116.71996 0.12671,-4.4372 2.45104,-7.81794 6.97277,-10.18447 16.69239,-18.00243 1.31003,-0.90857 2.32425,-0.19017 a 1.4579428,2.4932936 9.7 0 1 0.69728,1.83828 z"
     id="path2119"
     style="stroke-width:2.11296" />
  <path
     fill="#feb32d"
     d="m 638.28146,377.63013 q 3.48639,1.69035 4.45836,5.30352 a 3.5709034,2.0495718 89.9 0 0 0.99309,1.73264 q 1.54247,1.20438 3.44412,1.71149 a 2.9158857,3.3384777 82.3 0 1 1.66925,1.09874 q 4.58511,5.93742 11.11416,2.78911 a 0.78179544,0.84518425 71.5 0 1 1.18326,0.52825 l 0.73954,4.26817 v 125.72116 q -0.7184,4.52173 -1.60585,1.96504 a 4.0991436,2.5566824 89.6 0 0 -1.09874,-1.73262 q -3.7822,-3.06379 -8.47297,-4.12027 -0.9297,-0.21129 -1.83828,-0.86631 -3.46525,-2.45103 -5.91628,1.05648 -1.66925,2.36652 -2.83137,0.63389 -0.33808,-0.52824 -0.42259,0.0845 -1.141,8.98008 -1.26779,-0.19016 -0.10555,-7.37423 0.0422,1.58473 0.0634,4.52173 -0.7184,8.98007 l 0.35919,-131.00355 z"
     id="path2121"
     style="stroke-width:2.11296" />
  <path
     fill="#ff9626"
     d="m 459.73629,438.90598 q 0.50712,2.57782 2.26087,4.09914 1.24664,1.07762 4.12027,1.11987 7.18407,0.0845 12.67777,4.52173 a 0.88744347,0.84518425 34.2 0 0 1.33117,-0.21128 q 1.94391,-3.59204 2.15521,-7.94474 l -0.52823,202.84423 q -0.27469,1.88054 -0.44372,10.5648 -0.23243,12.17065 0,0.52823 0.16903,-9.4238 -1.43682,-18.67857 a 1.2255171,1.0564803 85.5 0 0 -1.01422,-1.01422 l -0.86631,-0.0634 q -1.26778,-0.0634 -1.98619,-0.40146 -7.03615,-3.33849 -12.86793,2.38763 a 1.3734244,1.8171462 21.9 0 1 -0.73954,0.44372 l -0.44371,0.10578 a 1.5847205,1.6692389 4.9 0 0 -1.141,1.01421 q -1.28891,3.27508 -1.60586,-2.81024 z"
     id="path2123"
     style="stroke-width:2.11296" />
  <path
     fill="#feb32d"
     d="m 549.00888,442.07543 q 1.22553,9.5717 1.58473,2.76797 0.0422,-0.97196 0.21129,0.0212 1.5002,9.50832 5.47256,18.31935 a 0.44372173,0.61275858 53.7 0 0 0.86632,0 q 0.63389,-0.61276 1.81715,1.81716 3.40187,7.03616 10.29012,5.85289 a 1.4790724,1.4790724 0 0 1 1.73262,1.43682 q 0.0422,3.5709 0.31694,1.43681 0.76067,-5.76838 1.31004,-11.57902 -0.23243,65.29048 0.54937,130.55983 0.0634,6.63472 2.64121,10.8395 3.1483,5.13449 7.98699,9.0646 -4.64851,10.03656 -14.66395,15.00201 -1.37342,0.6973 -2.76798,2.59894 l -6.29663,-3.7822 a 1.3100356,1.5847205 39.5 0 0 -1.73262,0.33809 l -43.12553,42.44937 q -0.52824,-2.02845 -1.66925,-1.05647 -6.02193,-0.0212 -10.5648,3.61316 0.71843,-4.35269 3.69769,-12.06501 3.27509,-8.4941 -5.36691,-11.09303 15.48799,-15.7627 31.14503,-31.35634 0.10555,-0.10578 6.0642,-5.30354 10.43803,-9.12798 10.4169,-25.14423 -0.0634,-72.3689 0.0845,-144.7378 z"
     id="path2125"
     style="stroke-width:2.11296" />
  <path
     fill="#ffde6b"
     d="m 728.61053,511.27488 q 1.45794,2.83137 4.54287,2.45104 a 2.6623304,3.6765515 62.5 0 1 1.98619,0.29582 q 6.4234,3.25396 13.58632,2.76797 a 1.7960166,1.9439238 12 0 0 1.50022,-1.05648 q 2.55668,-5.28241 1.98618,6.10647 v 97.72441 q -0.86631,-2.91587 -1.33117,0.0845 -0.0212,0.16903 0.0212,0.59163 0.0211,0.65501 -0.82406,0.5071 a 1.60585,1.0564803 81.4 0 1 -0.97197,-1.07761 q -0.48598,-1.41568 -2.09183,-1.33116 -0.84518,0.0422 -2.07069,-0.12671 l -12.2763,-1.69036 a 2.0707015,2.6834601 87.1 0 1 -2.07071,-1.43682 q -1.73263,-4.64852 -1.98618,0.25355 z"
     id="path2127"
     style="stroke-width:2.11296" />
  <path
     fill="#ffcb3b"
     d="m 661.88324,520.78321 0.52824,69.19945 -0.46484,-32.75089 a 2.3242567,2.9370153 18 0 0 -0.67616,-1.81714 q -7.22632,-7.52214 -17.38966,-5.705 -2.87362,0.50712 -4.05689,-1.41567 -0.52825,-0.86631 -0.69727,0.0422 l -0.8452,4.66964 -0.52823,-24.82728 q 0.7818,-4.45834 0.71841,-8.98008 -0.14791,-8.95896 -0.0422,-1.58473 0.12684,9.17026 1.26777,0.19018 0.0845,-0.61276 0.4226,-0.0845 1.16212,1.73262 2.83136,-0.63389 2.45104,-3.50751 5.9163,-1.05649 0.90857,0.65503 1.83826,0.86632 4.69078,1.05648 8.47299,4.12026 a 4.0991436,2.5566824 89.6 0 1 1.09873,1.73264 q 0.88744,2.55668 1.60585,-1.96506 z"
     id="path2129"
     style="stroke-width:2.11296" />
  <path
     fill="#ff871d"
     d="m 368.35075,517.08553 1.50019,17.96016 q 0.31696,3.71882 2.11297,0 0.84519,-1.73262 1.98617,-0.52824 0.97198,0.9931 1.18327,1.16212 3.2117,2.42992 6.55018,4.71191 0.19017,0.14792 4.35269,2.21861 4.35271,2.15523 4.01463,7.88135 -0.0634,1.03535 1.37343,0.92969 l 0.69728,180.65814 -0.5705,-48.06986 a 2.7045896,2.8736264 21.8 0 0 -0.71841,-1.83826 q -3.93011,-4.22593 -9.78301,-4.14141 a 1.60585,1.5213317 77.4 0 1 -1.41568,-0.95083 q -1.94392,-4.37384 -6.50792,-5.43031 a 1.4790724,1.7748868 27.7 0 0 -1.62698,0.67613 q -1.77489,2.21862 -1.79602,-2.04956 0,-2.21859 -1.35229,-1.05648 z"
     id="path2131"
     style="stroke-width:2.11296" />
  <path
     fill="#ffd74f"
     d="m 662.41148,589.98266 q 0.12672,25.9683 0.10555,51.93658 0,2.6412 0.44372,16.54449 0.29582,9.04346 -0.46485,16.5656 -1.66925,16.29093 10.03656,26.32749 -3.99349,3.25396 -8.59975,5.55709 -4.01461,1.98619 -6.10645,4.14141 -2.62007,2.70459 -4.9232,5.70498 L 627.10381,691.32026 605.44596,669.66242 566.3562,630.21344 q 1.39455,-1.90166 2.76797,-2.59895 10.01544,-4.96545 14.66395,-15.00201 20.91831,20.60135 41.37177,41.62532 4.73303,4.88094 7.50101,6.71922 6.10644,4.05688 6.0642,-3.31735 l -0.44373,-104.63381 0.84519,-4.66965 q 0.16903,-0.90856 0.69727,-0.0422 1.18326,1.92278 4.0569,1.41567 10.16334,-1.81713 17.38965,5.705 a 2.3242567,2.9370153 18 0 1 0.67616,1.81714 z"
     id="path2133"
     style="stroke-width:2.11296" />
  <path
     fill="#ffef81"
     d="M 752.21231,619.56411 V 767.9996 q -0.33808,0.44373 -0.48598,0.95084 a 0.90857308,1.2043876 13.4 0 1 -1.09874,0.90857 q -8.7688,-1.28891 -7.24746,-10.83949 1.83827,-11.62128 -9.57171,-11.62128 -4.14141,0 -4.66964,-3.16944 -1.52133,-27.9756 -1.03535,-55.99346 0.65501,-36.44858 0.5071,-72.89714 0.25357,-4.90208 1.98619,-0.25355 a 2.0707015,2.6834601 87.1 0 0 2.07071,1.43681 l 12.27629,1.69036 q 1.22552,0.16904 2.0707,0.12672 1.60585,-0.0845 2.09183,1.33115 a 1.60585,1.0564803 81.4 0 0 0.97197,1.07762 q 0.84519,0.14791 0.82405,-0.50711 -0.0422,-0.4226 -0.0212,-0.59162 0.46486,-3.00041 1.33117,-0.0845 z"
     id="path2135"
     style="stroke-width:2.11296" />
  <path
     fill="#feab2d"
     d="m 481.75335,643.33493 0.16902,17.43192 -1.05646,3.69768 -12.06501,8.24054 a 1.6692389,1.7748868 79.6 0 0 -0.69728,0.95084 q -0.42259,1.5002 -0.97197,-1.26778 l -1.0776,-13.64972 a 1.7748868,1.3522948 10.2 0 0 -1.2044,-1.31004 q -3.65541,-1.26778 -5.6416,-4.58512 v -17.43193 q 0.31695,6.08532 1.60586,2.81023 a 1.5847205,1.6692389 4.9 0 1 1.141,-1.01421 l 0.44371,-0.10578 a 1.3734244,1.8171462 21.9 0 0 0.73954,-0.44371 q 5.83178,-5.72612 12.86793,-2.38765 0.71841,0.33807 1.98619,0.40147 l 0.86631,0.0634 a 1.2255171,1.0564803 85.5 0 1 1.01422,1.01422 q 1.60585,9.25476 1.43682,18.67857 -0.23243,11.64241 0,-0.52825 0.16903,-8.68426 0.44372,-10.56479 z"
     id="path2137"
     style="stroke-width:2.11296" />
  <path
     fill="#fbb31d"
     d="m 501.29824,648.61734 q 8.642,2.59893 5.36691,11.09303 -2.97926,7.71231 -3.69769,12.065 -9.5717,9.93093 -19.52375,19.46038 -2.6412,2.53554 -6.16985,4.52173 -3.3596,1.88053 -6.63469,3.90896 -0.97196,0.61277 -2.34539,2.04959 -2.81024,2.91589 -3.71881,-1.35229 a 2.7045896,3.2750889 48.7 0 1 0.31695,-1.96506 q 2.74684,-5.40918 2.68346,-7.52214 -0.29582,-9.23364 -0.44373,-18.48841 0.54938,2.76798 0.97197,1.26778 a 1.6692389,1.7748868 79.6 0 1 0.69728,-0.95084 l 12.06501,-8.24054 8.36732,-4.66964 z"
     id="path2139"
     style="stroke-width:2.11296" />
  <path
     fill="#fbbc41"
     d="m 467.13165,672.38813 q 0.14791,9.25477 0.44373,18.48841 0.0634,2.11296 -2.68346,7.52214 a 2.7045896,3.2750889 48.7 0 0 -0.31695,1.96506 q 0.90857,4.26818 3.71881,1.35229 1.37343,-1.43682 2.34539,-2.04959 3.27509,-2.02843 6.63469,-3.90896 3.52865,-1.98619 6.16985,-4.52173 9.95205,-9.52945 19.52375,-19.46038 4.54287,-3.63428 10.5648,-3.61315 1.14101,-0.97198 1.66925,1.05647 -39.34332,39.80818 -79.19375,79.08811 -15.06542,14.85412 -29.8984,29.83502 -46.40062,46.78094 -93.47739,92.88575 -6.14871,6.02194 -10.58593,7.54326 -6.29662,2.19748 -13.54408,0.80293 l 0.52825,-2.47216 q 2.38765,-0.63389 4.58512,-1.69038 2.02844,-0.99309 4.47947,-1.8594 7.33198,-2.55668 10.92401,-9.78301 2.15522,-4.37383 8.1349,-7.75456 6.4868,-3.63429 15.86834,-14.22022 10.86061,-12.23405 23.74967,-22.22835 3.44413,-2.66233 17.07272,-16.45997 3.59204,-3.6343 7.47989,-9.67737 4.20479,-6.57129 7.94472,-9.50831 7.43763,-5.87403 11.62129,-12.14952 7.16294,-10.75497 16.92482,-16.92482 14.93863,-9.44494 21.76349,-25.73586 1.85941,-4.47948 -0.59163,-6.65583 a 0.9930915,1.0776099 39.1 0 0 -1.50019,0.21131 q -7.71232,9.95203 -17.17838,18.17146 -2.76798,2.38764 -7.1418,6.95163 -3.4864,3.63429 -7.58554,6.59244 a 1.2677764,1.6481094 49.2 0 1 -1.81714,0.10556 l -4.33158,-3.80333 q 28.65176,-28.60949 57.04994,-57.49366 3.52865,-3.59203 3.16945,-12.17065 -0.59163,-13.96667 -0.44373,-27.9756 1.98619,3.31734 5.6416,4.58512 a 1.7748868,1.3522948 10.2 0 1 1.2044,1.31004 z"
     id="path2141"
     style="stroke-width:2.11296" />
  <path
     fill="#ffdb60"
     d="m 572.61065,824.52131 -0.48598,-15.84722 a 2.2608679,1.7748868 21.8 0 0 -0.90858,-1.56358 q -1.39455,-1.03536 -1.83826,-3.54978 a 3.0849226,3.0215337 15.6 0 0 -1.03536,-1.79602 q -8.32507,-7.16294 -16.96708,-4.41609 a 2.2397383,2.7045896 7.1 0 0 -1.41567,1.33117 q -1.5636,3.33848 -1.47908,-3.21171 0.5705,-54.09178 0.46486,-108.18357 -0.0212,-7.22633 1.26777,-10.58593 2.0707,-5.32467 6.90938,-8.66314 3.5709,-2.47218 6.95164,0.23242 6.97278,5.53596 8.40959,13.50181 0.21128,1.09875 0.21128,15.10769 0.0634,63.83254 -0.0845,127.64395 z"
     id="path2143"
     style="stroke-width:2.11296" />
  <path
     fill="#fda42d"
     d="m 392.12156,732.07927 0.35921,12.67777 q -1.37343,8.17716 -1.2044,-4.22592 0.0634,-4.71191 -0.2747,-0.71841 -0.0211,0.19016 0,0.38033 0.6339,4.9232 -3.93009,-1.24665 a 3.0426632,3.1271818 82 0 0 -1.50019,-1.09873 q -4.64853,-1.60585 -7.71232,0.99308 -2.28201,1.9228 -2.36652,6.25437 -0.14791,6.08533 0.69728,14.45265 0.9931,9.80414 -2.21861,21.27751 a 3.2962186,3.9089771 72.8 0 1 -1.09873,1.71151 l -1.20439,1.09874 a 2.9370153,2.3665159 76 0 0 -0.82406,1.77489 q -0.54937,6.21209 -4.94433,9.74073 -4.90206,3.93012 -5.7895,5.07111 -2.78911,3.59204 -4.39497,6.46566 -1.35228,2.42992 -3.5709,3.2751 -3.69768,1.39455 -4.14141,1.73262 -2.32425,1.71149 -4.24704,3.86672 -1.37343,1.56359 -2.30312,5.00772 -1.5002,5.62046 -6.2755,8.76878 -0.99309,0.65502 -6.02194,1.8594 -3.50751,0.8452 -5.57822,3.73995 -2.97927,4.14141 -3.02154,4.20478 -9.31814,10.18448 -22.10155,21.9114 -2.83138,2.59896 -6.33889,4.16254 -1.94392,0.86631 -4.66964,3.59203 -0.29581,-2.51441 -2.64122,-3.16944 l 81.24334,-81.96175 a 7.2685846,7.6911767 66.3 0 0 2.23975,-5.28239 l 0.0634,-109.17668 q 1.35229,-1.16211 1.35229,1.05648 0.0212,4.26818 1.79603,2.04956 a 1.4790724,1.7748868 27.7 0 1 1.62698,-0.67613 q 4.564,1.05647 6.5079,5.43031 a 1.60585,1.5213317 77.4 0 0 1.4157,0.95083 q 5.85289,-0.0845 9.783,4.14141 a 2.7045896,2.8736264 21.8 0 1 0.7184,1.83826 z"
     id="path2145"
     style="stroke-width:2.11296" />
  <path
     fill="#ffec79"
     d="m 672.53257,701.35682 43.84391,43.48473 q -7.75456,5.11337 -5.9374,13.24826 0.54936,2.47218 3.48638,6.55018 1.94393,2.7046 4.12027,6.27549 a 1.183258,1.2043876 56 0 1 -0.31694,1.58473 q -3.35961,2.51441 -4.07802,5.00772 L 652.90316,716.7603 q 2.30312,-3.00039 4.92318,-5.70498 2.09185,-2.15522 6.10647,-4.14141 4.60626,-2.30313 8.59976,-5.55709 z"
     id="path2147"
     style="stroke-width:2.11296" />
  <path
     fill="#fbb31d"
     d="m 289.03021,876.9016 q -8.32508,-2.09183 -1.58472,-8.09265 2.72572,-2.72572 4.66964,-3.59203 3.50751,-1.56358 6.33889,-4.16254 12.78341,-11.72692 22.10155,-21.9114 0.0422,-0.0634 3.02154,-4.20478 2.07071,-2.89475 5.57822,-3.73995 5.02885,-1.20438 6.02194,-1.8594 4.7753,-3.14832 6.2755,-8.76878 0.92969,-3.44413 2.30312,-5.00772 1.92279,-2.15523 4.24704,-3.86672 0.44373,-0.33807 4.14141,-1.73262 2.21862,-0.84518 3.5709,-3.2751 1.60586,-2.87362 4.39497,-6.46566 0.88744,-1.14099 5.7895,-5.07111 4.39496,-3.52864 4.94433,-9.74073 a 2.9370153,2.3665159 76 0 1 0.82406,-1.77489 l 1.20439,-1.09874 a 3.2962186,3.9089771 72.8 0 0 1.09873,-1.71151 q 3.21171,-11.47337 2.21861,-21.27751 -0.84519,-8.36732 -0.69728,-14.45265 0.0845,-4.33157 2.36652,-6.25437 3.06379,-2.59893 7.71232,-0.99308 a 3.0426632,3.1271818 82 0 1 1.50019,1.09873 q 4.56399,6.16985 3.93009,1.24665 -0.0211,-0.19017 0,-0.38033 0.33809,-3.9935 0.2747,0.71841 -0.16903,12.40308 1.2044,4.22592 -1.37343,10.52254 6.95162,5.72612 l 4.33158,3.80333 a 1.2677764,1.6481094 49.2 0 0 1.81714,-0.10556 q 4.09914,-2.95815 7.58554,-6.59245 4.37382,-4.56398 7.1418,-6.95163 9.46606,-8.21942 17.17838,-18.17146 a 0.9930915,1.0776099 39.1 0 1 1.50019,-0.2113 q 2.45104,2.17635 0.59163,6.65582 -6.82486,16.29093 -21.76349,25.73587 -9.76188,6.16985 -16.92482,16.92482 -4.18366,6.27549 -11.62129,12.14952 -3.73993,2.93702 -7.94472,9.50831 -3.88785,6.04307 -7.47989,9.67736 -13.62859,13.79765 -17.07272,16.45998 -12.88906,9.9943 -23.74967,22.22835 -9.38154,10.58592 -15.86834,14.22022 -5.97968,3.38073 -8.1349,7.75456 -3.59203,7.22633 -10.92401,9.783 -2.45103,0.86632 -4.47947,1.85941 -2.19747,1.05649 -4.58512,1.69037 z"
     id="path2149"
     style="stroke-width:2.11296" />
  <path
     fill="#ffe561"
     d="m 729.13878,744.2288 q 0.52823,3.16944 4.66964,3.16944 11.40998,0 9.57171,11.62128 -1.52134,9.55058 7.24746,10.83949 a 0.90857308,1.2043876 13.4 0 0 1.09874,-0.90857 q 0.1479,-0.50711 0.48598,-0.95084 v 4.22592 l -7.14181,30.00404 q -0.12684,0.48599 -1.11986,1.69038 l -1.77489,2.11295 -28.52498,-28.52496 q 0.71841,-2.49331 4.07802,-5.00772 a 1.183258,1.2043876 56 0 0 0.31694,-1.58473 q -2.17634,-3.57089 -4.12027,-6.27549 -2.93702,-4.078 -3.48638,-6.55018 -1.81716,-8.13489 5.9374,-13.24826 l 9.99433,7.47987 q 2.78911,2.09184 2.78911,-1.37341 z"
     id="path2151"
     style="stroke-width:2.11296" />
  <path
     fill="#fecf5f"
     d="m 482.45062,755.85008 -0.16904,97.72443 q -1.56358,0.52825 -1.69037,-0.90858 a 1.0776099,0.95083229 86.2 0 0 -0.99309,-0.99309 q -10.96626,0.5705 -15.17105,-8.43072 -0.16905,-0.38033 -3.33849,-6.0008 -2.64119,-4.69077 1.88054,-9.17025 a 4.8175503,4.5851246 68.6 0 0 1.3523,-3.33848 l -0.0634,-52.8874 a 0.90857308,0.95083229 88.1 0 0 -1.01422,-0.90857 q -2.30312,0.10555 -4.03576,-1.88054 0.31695,-2.45102 1.92279,-4.3527 6.78261,-8.00811 14.36815,-15.2767 9.31814,-10.16334 6.95163,6.4234 z"
     id="path2153"
     style="stroke-width:2.11296" />
  <path
     fill="#fff394"
     d="m 662.41148,817.65417 -0.84518,5.43031 a 1.4579428,1.3311652 1.9 0 1 -1.31004,1.11987 q -7.01503,0.52824 -14.00893,0.3592 -0.16904,-0.0212 -2.30313,-0.38033 -2.2186,-0.38033 -4.54286,1.39456 -1.18326,0.90857 -1.22552,-0.61276 l -0.42259,-20.51685 q 0.76066,-27.46848 0.44372,-54.93697 -0.0422,-3.06381 3.04266,-3.48639 a 2.4087751,1.9650534 58.5 0 1 1.81715,0.63389 q 6.95165,6.52906 16.39656,16.98821 3.99351,4.41609 3.52865,9.783 -0.38033,4.12027 -0.38033,4.24705 -0.1479,19.98861 -0.19016,39.97721 z"
     id="path2155"
     style="stroke-width:2.11296" />
  <path
     fill="#ffea77"
     d="m 459.20805,769.05608 q 1.73264,1.98618 4.03575,1.88054 a 0.90857308,0.95083229 88.1 0 1 1.01422,0.90857 l 0.0634,52.8874 a 4.8175503,4.5851246 68.6 0 1 -1.35231,3.33848 q -4.52172,4.47948 -1.88054,9.17025 3.16945,5.62047 3.33849,6.0008 4.20478,9.00122 15.17106,8.43072 a 1.0776099,0.95083229 86.2 0 1 0.99309,0.99309 q 0.12684,1.43683 1.69035,0.90858 1.33118,108.52169 0.61277,170.62159 -0.10555,8.8322 0.84519,13.7765 a 1.3945541,1.4579428 88.4 0 0 1.24664,1.141 q 19.20683,2.3666 38.58267,1.5424 8.83218,6.3601 18.63631,10.9876 2.38764,1.1197 7.45874,1.5424 8.38846,0.6971 9.3393,9.1913 a 1.0353507,1.1198692 83.7 0 1 -0.99311,1.141 l -6.97276,0.7395 -48.06985,0.1692 -200.73127,-0.1692 q -10.924,-0.338 -6.33887,-1.3099 a 1.5002021,2.197479 12.2 0 0 1.28891,-1.2256 q 0.44371,-1.0142 1.75375,-1.2044 a 1.8171462,1.5847205 5.8 0 0 1.41568,-0.993 q 1.5002,-3.4865 4.64852,-4.0358 7.37422,-1.2467 9.71962,-7.163 2.51443,-6.36 9.17025,-7.6701 21.10847,0.5707 42.13244,-1.1831 a 1.60585,1.2255171 0.2 0 0 1.41567,-1.0777 l 1.43681,-9.4449 q 4.85981,-8.6421 13.77651,-5.4092 5.93742,2.134 8.64201,2.5567 a 0.38033292,1.3734244 47.6 0 0 0.95082,-0.4861 q 0.42261,-0.338 0.76067,1.2256 l 0.69729,9.128 q 0.29582,3.74 5.13449,4.0146 28.88417,1.6904 56.60621,-0.4648 a 2.2397383,2.2819975 87.9 0 0 2.09184,-2.2187 q 1.58472,-103.95762 0.97196,-208.02094 z"
     id="path2157"
     style="stroke-width:2.11296" />
  <path
     fill="#ffca4c"
     d="m 752.21231,772.22552 q 0.33808,9.23363 7.88134,16.50222 27.53187,26.64444 75.26367,75.74964 0.10555,0.10556 3.88784,3.59204 3.90896,3.59203 7.28971,9.55058 a 0.82405466,0.80292504 73.9 0 1 -0.65501,1.22551 l -24.82729,0.59164 q -4.66964,0.12685 -8.47298,-3.65543 l -70.40384,-69.74883 1.77489,-2.11295 q 0.99308,-1.20439 1.11986,-1.69038 z"
     id="path2159"
     style="stroke-width:2.11296" />
  <path
     fill="#ffef81"
     d="m 548.48064,795.46808 q -0.0845,6.55019 1.47908,3.21171 a 2.2397383,2.7045896 7.1 0 1 1.41567,-1.33117 q 8.64201,-2.74685 16.96708,4.41609 a 3.0849226,3.0215337 15.6 0 1 1.03536,1.79602 q 0.44371,2.51442 1.83826,3.54978 a 2.2608679,1.7748868 21.8 0 1 0.90858,1.56358 l 0.48598,15.84722 v 112.51514 q -2.55669,1.75376 -3.46524,4.62738 a 1.8805349,2.4299047 3.1 0 1 -1.24665,1.43683 q -7.86023,3.04266 -16.20642,1.88053 a 2.2186088,1.8805349 22.2 0 0 -1.81715,0.59162 l -1.39455,1.5002 z"
     id="path2161"
     style="stroke-width:2.11296" />
  <path
     fill="#fff263"
     d="m 637.75323,804.44817 0.42259,20.51685 q 0.0422,1.52133 1.22552,0.61276 2.32426,-1.77489 4.54286,-1.39456 2.13409,0.3592 2.30313,0.38033 6.9939,0.16904 14.00893,-0.3592 a 1.4579428,1.3311652 1.9 0 0 1.31004,-1.11987 l 0.84518,-5.43031 v 84.51843 q -1.07761,7.73344 -0.44373,11.09304 1.18326,6.14873 -1.88053,3.88786 a 3.9512365,3.9301068 59 0 0 -2.91588,-0.73954 q -10.5648,1.56358 -14.6217,-3.80333 -2.66233,-3.5709 -3.16943,0.25355 -0.27468,2.17635 -1.62698,-0.12684 z"
     id="path2163"
     style="stroke-width:2.11296" />
  <path
     fill="#ffca4c"
     d="m 752.21231,966.0897 q -0.59163,2.9792 -1.03535,1.0776 -1.3523,-5.7473 -6.04307,-5.536 -3.423,0.1479 -6.78261,1.6904 -4.9232,2.282 -3.27509,9.0223 0.19017,0.8663 0.23243,1.5214 0.2113,5.1978 -1.62698,0.9297 -0.65501,-1.5425 -1.22552,0.021 -2.93701,8.0081 -3.84559,3.9512 l -0.0845,-143.44885 q 0,-2.83137 2.13409,-0.97196 11.89597,10.41689 20.64363,22.989 a 3.3384777,3.3173482 27.5 0 1 0.61274,1.9228 z"
     id="path2165"
     style="stroke-width:2.11296" />
  <path
     fill="#ffd853"
     d="m 393.00899,1026.8373 q -0.33807,-1.5636 -0.76066,-1.2256 a 0.38033292,1.3734244 47.6 0 1 -0.95083,0.4861 q -2.70458,-0.4227 -8.64201,-2.5567 -8.91669,-3.2329 -13.7765,5.4092 l 0.42259,-169.58628 a 3.5920331,3.5920331 0 0 1 0.59163,-1.90166 q 6.29662,-9.71963 14.83297,-17.62211 3.08493,-4.54284 6.84601,-2.09182 a 1.8594054,2.1552199 13.6 0 1 0.86631,1.69037 z"
     id="path2167"
     style="stroke-width:2.11296" />
  <path
     fill="#fac97c"
     d="m 284.80427,865.63951 q 2.34541,0.65503 2.64122,3.16944 -6.74036,6.00082 1.58472,8.09265 l -0.52825,2.47216 -13.58633,-0.5705 a 0.69727702,0.73953622 16.5 0 1 -0.54936,-1.09874 q 4.09914,-7.39537 10.438,-12.06501 z"
     id="path2169"
     style="stroke-width:2.11296" />
  <path
     fill="#ffdd46"
     d="m 662.41148,902.1726 -0.52824,97.7244 q -0.0422,-3.8033 -2.59894,-6.1276 a 2.9370153,2.9581449 57.3 0 0 -2.85249,-0.6127 q -5.30354,1.6481 -8.85332,3.3807 -0.46485,0.2113 -0.82404,0.1479 -0.7818,-0.1268 -0.6339,-0.7395 a 0.40146252,0.48598095 4.9 0 0 -0.42259,-0.6128 l -5.95854,1.0776 a 1.4368132,1.3734244 86.4 0 0 -1.14101,1.3523 l -0.48597,11.6425 -0.35921,-96.66799 q 1.3523,2.30312 1.62698,0.12684 0.5071,-3.82445 3.16943,-0.25355 4.0569,5.36691 14.6217,3.80333 a 3.9512365,3.9301068 59 0 1 2.91588,0.73953 q 3.06379,2.26088 1.88053,-3.88785 -0.63388,-3.3596 0.44373,-11.09304 z"
     id="path2171"
     style="stroke-width:2.11296" />
  <path
     fill="#ffea77"
     d="m 572.61065,937.03645 v 31.16615 l -0.59162,7.7969 a 0.78179544,0.73953622 9.5 0 1 -0.97196,0.655 q -1.33117,-0.317 -1.58473,0.9508 a 1.4790724,2.894756 1.8 0 1 -0.90858,1.6481 q -3.33847,2.3031 -7.47988,2.6412 a 3.8033292,3.6976811 24 0 0 -1.90166,0.6973 q -3.08492,2.2609 -6.84598,3.0215 a 2.0073126,2.5355528 60.9 0 1 -1.71152,-0.2747 l -0.76064,-0.4859 q -0.82407,-0.5283 -0.8452,0.3803 l -0.16902,7.2686 -0.35922,-45.42869 1.39455,-1.5002 a 2.2186088,1.8805349 22.2 0 1 1.81715,-0.59162 q 8.34619,1.16213 16.20642,-1.88053 a 1.8805349,2.4299047 3.1 0 0 1.24665,-1.43683 q 0.90855,-2.87362 3.46524,-4.62738 z"
     id="path2173"
     style="stroke-width:2.11296" />
  <path
     fill="#ffa926"
     d="m 752.21231,966.0897 0.5705,70.425 a 3.5497739,3.6131626 89.8 0 0 3.61315,3.5286 l 133.24332,0.084 q 3.90896,0.9509 7.88133,1.3735 2.66234,0.2747 0.67614,0.9085 -0.44372,0.148 0.0212,0.3592 2.04957,0.9086 0.69728,2.1552 -0.80293,0.7607 -1.16213,1.3101 -2.42991,3.7399 -6.69809,5.0288 a 3.3173482,3.655422 13.8 0 0 -1.62698,1.0988 l -6.46565,7.8179 q -1.47907,1.7538 0.84517,2.0496 l 12.17066,1.5002 -20.07313,0.1691 -202.31598,0.3592 7.39537,-0.8241 q 0.90857,-0.1052 0,-0.2958 -2.36652,-0.5283 -1.2044,-2.2187 a 1.9016645,3.0004041 48.7 0 0 0.54937,-1.8593 q -0.97195,-7.6277 -4.64851,-14.3893 a 2.1129607,3.0215337 30.6 0 1 -0.14791,-1.9227 q 0.38033,-1.4369 -0.3592,-2.6202 l 51.23929,-0.5915 a 1.6269797,1.5847205 89.6 0 0 1.56359,-1.6271 l 0.6339,-59.1418 q 0.90857,4.0569 3.84558,-3.9512 0.57051,-1.5636 1.22552,-0.021 1.83828,4.2682 1.62697,-0.9297 -0.0422,-0.655 -0.23242,-1.5213 -1.64811,-6.7403 3.27509,-9.0223 3.35961,-1.5425 6.78261,-1.6904 4.69078,-0.2113 6.04307,5.5359 0.44372,1.9017 1.03536,-1.0776 z"
     id="path2175"
     style="stroke-width:2.11296" />
  <path
     fill="#ffde5b"
     d="m 572.61065,968.2026 q 0.14791,34.3356 0.0845,68.6712 0,2.5356 1.05649,3.254 1.73262,0.7817 3.69767,0.7607 2.57782,-0.021 0.63389,1.2044 a 1.2466468,1.2677764 64.5 0 0 -0.52823,1.458 q 3.38074,9.9731 0.0212,18.8053 0.8452,2.2185 -3.29621,1.9016 h -23.24257 l 6.97276,-0.7395 a 1.0353507,1.1198692 83.7 0 0 0.99311,-1.141 q -0.95084,-8.4942 -9.3393,-9.1913 -5.0711,-0.4227 -7.45874,-1.5424 -9.80413,-4.6275 -18.63631,-10.9876 l 21.21411,-0.7184 a 3.2117003,3.3173482 1.3 0 0 3.08492,-3.0427 q 1.73265,-22.1649 0.97198,-44.3932 l 0.16895,-7.2686 q 0.0212,-0.9086 0.84519,-0.3803 l 0.76066,0.4859 a 2.0073126,2.5355528 60.9 0 0 1.7115,0.2747 q 3.76108,-0.7606 6.84599,-3.0215 a 3.8033292,3.6976811 24 0 1 1.90167,-0.6973 q 4.1414,-0.3381 7.47988,-2.6412 a 1.4790724,2.894756 1.8 0 0 0.90857,-1.6481 q 0.25356,-1.2678 1.58473,-0.9508 a 0.78179544,0.73953622 9.5 0 0 0.97195,-0.655 z"
     id="path2177"
     style="stroke-width:2.11296" />
  <path
     fill="#ffcb3b"
     d="m 661.88324,999.897 0.69728,37.8855 a 1.4579428,1.4579428 0 0 0 1.05648,1.3733 q 5.62047,1.5425 11.53677,0.972 0.73953,1.1834 0.35919,2.6201 a 2.1129607,3.0215337 30.6 0 0 0.14791,1.9227 q 3.67656,6.7616 4.64852,14.3893 a 1.9016645,3.0004041 48.7 0 1 -0.54938,1.8595 q -1.16212,1.6904 1.2044,2.2186 0.90856,0.1902 0,0.2958 l -7.39537,0.824 H 574.2799 q 4.14139,0.3169 3.2962,-1.9016 3.35962,-8.8322 -0.0212,-18.8053 a 1.2466468,1.2677764 64.5 0 1 0.52824,-1.458 q 1.94392,-1.2256 -0.6339,-1.2044 -1.96505,0.021 -3.69767,-0.7607 l 61.31811,-0.084 a 2.1129607,2.0495718 0.9 0 0 2.11297,-1.9863 l 0.92971,-28.6518 0.48597,-11.6424 a 1.4368132,1.3734244 86.4 0 1 1.14101,-1.3523 l 5.95854,-1.0776 a 0.40146252,0.48598095 4.9 0 1 0.42259,0.6128 q -0.14791,0.6128 0.63389,0.7395 0.3592,0.063 0.82405,-0.1479 3.54978,-1.7326 8.85331,-3.3807 a 2.9370153,2.9581449 57.3 0 1 2.8525,0.6127 q 2.55667,2.3243 2.59894,6.1276 z"
     id="path2179"
     style="stroke-width:2.11296" />
  <path
     fill="#fb7a24"
     d="m 889.63928,1040.1278 h 29.0532 q 54.02845,0.9509 87.15952,0.4437 14.6852,-0.2324 25.7783,1.5426 a 1.5635909,1.6269797 87.9 0 1 1.3099,1.1621 q 1.7538,6.7191 -0.3169,16.4176 a 2.4510344,2.4510344 0 0 1 -2.3454,1.944 l -134.29976,2.0918 -12.17065,-1.5002 q -2.32425,-0.2958 -0.84518,-2.0496 l 6.46566,-7.818 a 3.3173482,3.655422 13.8 0 1 1.62698,-1.0987 q 4.26818,-1.2888 6.69808,-5.0289 0.35921,-0.5493 1.16214,-1.3099 1.35229,-1.2467 -0.69729,-2.1552 -0.46485,-0.2113 -0.0212,-0.3593 1.9862,-0.6338 -0.67614,-0.9085 -3.97237,-0.4226 -7.88134,-1.3735 z"
     id="path2181"
     style="stroke-width:2.11296" />
  <path
     fill="#ffc146"
     d="m 236.73443,1040.656 q -12.88906,5.2402 -19.35472,17.3475 a 0.35920331,0.29581449 49.7 0 0 0,0.2747 q 1.75376,4.8598 -0.69727,4.5851 a 2.2397383,0.95083229 17.3 0 0 -1.07762,0.1053 l -0.50712,0.2325 q -1.05646,0.4648 0.10556,0.486 l 55.86668,0.5704 -180.510229,-0.4649 a 3.8878476,3.5286443 0.8 0 1 -3.88784,-3.6342 l 0.54936,-17.3685 a 1.8805349,1.60585 81.5 0 1 1.01422,-1.606 q 0.71841,-0.2957 1.64812,-0.1689 z"
     id="path2183"
     style="stroke-width:2.11296" />
  <path
     fill="#ffdb60"
     d="m 236.73443,1040.656 h 87.15963 q -6.65583,1.3101 -9.17025,7.6701 -2.3454,5.9163 -9.71963,7.163 -3.1483,0.5493 -4.64851,4.0358 a 1.8171462,1.5847205 5.8 0 1 -1.41567,0.993 q -1.31005,0.1902 -1.75377,1.2044 a 1.5002021,2.197479 12.2 0 1 -1.2889,1.2256 q -4.58514,0.9719 6.33887,1.3099 h -31.16616 l -55.86668,-0.5704 q -1.16212,-0.021 -0.10556,-0.486 l 0.50712,-0.2325 a 2.2397383,0.95083229 17.3 0 1 1.07762,-0.1052 q 2.45103,0.2747 0.69727,-4.5852 a 0.35920331,0.29581449 49.7 0 1 0,-0.2746 q 6.46567,-12.1074 19.35472,-17.3475 z"
     id="path2185"
     style="stroke-width:2.11296" />
  <path
     fill="#ffec79"
     d="m 377.77456,1111.2712 77.12306,0.1691 -4.24705,1.3522 q -0.7818,0.2536 -0.16905,0.7818 1.75376,1.5214 1.64812,3.7189 -0.35921,6.8883 -0.0845,10.8183 a 2.4932936,2.8313673 59.9 0 1 -0.61277,1.8384 q -2.09183,2.641 0.82407,4.5639 l -80.29251,0.6972 -152.28107,-0.4859 a 1.4156837,1.4156837 0 0 1 -1.3523,-1.0143 q -2.21861,-8.008 -0.73954,-19.0377 a 3.2539594,3.2328298 3 0 1 3.14831,-2.8102 q 78.05277,-1.4579 157.03524,-0.5917 z"
     id="path2187"
     style="stroke-width:2.11296" />
  <path
     fill="#fcd758"
     d="m 557.90444,1110.912 4.22593,0.5283 a 0.88744347,0.76066582 9.8 0 1 0.78179,0.9508 q -1.22552,5.3035 0.33809,10.5014 0.29579,0.972 0.0845,2.0285 -0.82405,3.8245 0.80293,7.2684 a 1.5635909,1.183258 59.9 0 1 -0.21131,1.7328 q -0.52822,0.4015 -1.26777,0.5916 H 452.25643 q -2.9159,-1.9229 -0.82407,-4.5639 a 2.4932936,2.8313673 59.9 0 0 0.61277,-1.8384 q -0.27469,-3.93 0.0845,-10.8183 0.10555,-2.1975 -1.64812,-3.7189 -0.61275,-0.5282 0.16905,-0.7818 l 4.24705,-1.3522 z"
     id="path2189"
     style="stroke-width:2.11296" />
  <path
     fill="#fbbe3a"
     d="m 557.90444,1110.912 h 76.0666 q 2.02843,0.7818 4.52173,0.4014 1.56358,-0.2535 0.95083,1.2045 -2.11296,4.902 1.45794,6.4233 a 1.9650534,2.2819975 1.1 0 1 1.141,1.3735 l 2.07071,7.5221 a 2.2819975,1.9016645 57.2 0 1 -0.21131,1.7749 q -1.58472,2.4722 1.11988,3.8879 0.84518,0.4648 -0.0845,0.486 l -32.62411,1.0565 -49.65458,-0.5283 q 0.73955,-0.1901 1.26778,-0.5916 a 1.5635909,1.183258 59.9 0 0 0.2113,-1.7328 q -1.62698,-3.4439 -0.80292,-7.2684 0.21128,-1.0565 -0.0845,-2.0285 -1.5636,-5.1979 -0.33809,-10.5014 a 0.88744347,0.76066582 9.8 0 0 -0.78178,-0.9508 z"
     id="path2191"
     style="stroke-width:2.11296" />
  <path
     fill="#feb32d"
     d="m 633.97104,1110.912 68.14296,0.3592 q -17.68547,0.1479 -35.39209,0.5283 -9.69848,0.1901 -2.04956,5.4515 a 1.6269797,1.7114981 20.4 0 1 0.69727,1.6268 q -0.69727,5.6205 1.01422,11.0086 a 2.8313673,2.4721639 9.1 0 0 1.26778,1.5213 q 7.73343,4.4161 -3.5709,3.254 -4.01462,-0.4014 -7.9236,0.3804 h -43.84394 l 32.62411,-1.0565 q 0.92971,-0.021 0.0845,-0.486 -2.7046,-1.4157 -1.11989,-3.8879 a 2.2819975,1.9016645 57.2 0 0 0.21131,-1.7749 l -2.0707,-7.5221 a 1.9650534,2.2819975 1.1 0 0 -1.141,-1.3735 q -3.5709,-1.5213 -1.45794,-6.4233 0.61276,-1.458 -0.95083,-1.2045 -2.49331,0.3804 -4.52174,-0.4014 z"
     id="path2193"
     style="stroke-width:2.11296" />
  <path
     fill="#fa9b20"
     d="m 702.114,1111.2712 116.21284,0.1691 13.62861,1.0987 q 0.84518,0.063 0.10555,0.5494 -6.65583,4.2259 -5.57822,12.4242 a 1.5002021,1.4790724 72 0 1 -0.76067,1.5213 q -9.46605,5.0922 0.46486,6.5713 a 0.38033292,0.33807371 17.8 0 1 0.31694,0.5071 l -0.25355,0.4015 -170.09333,0.5283 q 3.90899,-0.7818 7.9236,-0.3804 11.30433,1.1621 3.57091,-3.254 a 2.8313673,2.4721639 9.1 0 1 -1.26778,-1.5213 q -1.7115,-5.3881 -1.01423,-11.0086 a 1.6269797,1.7114981 20.4 0 0 -0.69727,-1.6268 q -7.64892,-5.2614 2.04956,-5.4515 17.70662,-0.3804 35.3921,-0.5283 z"
     id="path2195"
     style="stroke-width:2.11296" />
  <path
     fill="#ff871d"
     d="m 818.32684,1111.4403 50.71107,-0.1691 30.95486,0.6551 a 2.9581449,2.8313673 85.9 0 1 2.76798,2.4933 q 1.90167,11.8747 -1.50019,19.0376 l -75.01012,1.0566 0.25356,-0.4015 a 0.38033292,0.33807371 17.8 0 0 -0.31694,-0.5071 q -9.93092,-1.4791 -0.46486,-6.5713 a 1.5002021,1.4790724 72 0 0 0.76067,-1.5213 q -1.07761,-8.1983 5.57822,-12.4242 0.73954,-0.486 -0.10555,-0.5494 z"
     id="path2197"
     style="stroke-width:2.11296" />
  <path
     fill="#fff394"
     d="m 377.77456,1180.6398 q -1.83828,7.2052 -1.26779,14.5794 a 2.2186088,2.4087751 64.3 0 1 -0.69727,1.775 q -2.68346,2.7044 -3.52864,6.4023 a 1.9227943,2.0073126 84.1 0 1 -1.18326,1.3944 l -1.24666,0.5071 q -2.76797,0.6973 -4.69076,-0.6127 -1.47908,-1.0143 -1.83828,-3.6978 -1.18325,-9.1491 0.63388,-18.2136 a 1.7114981,1.7114981 0 0 1 1.22552,-1.3101 q 6.16985,-1.5636 12.59326,-0.824 z"
     id="path2199"
     style="stroke-width:2.11296" />
  <path
     fill="#ffde6b"
     d="m 377.77456,1180.6398 22.71432,-0.1692 14.79073,0.1692 -4.79643,6.8459 a 2.8736264,2.7468487 60.6 0 0 -0.48598,1.9018 q 0.73953,6.7825 -3.73993,12.6566 a 0.88744347,0.88744347 0 0 0 0.52823,1.4157 q 3.80332,0.8029 1.14099,0.5071 -2.5778,-0.2959 -4.26818,1.3311 h -33.80737 l 1.24666,-0.5071 a 1.9227943,2.0073126 84.1 0 0 1.18326,-1.3944 q 0.84518,-3.6979 3.52864,-6.4023 a 2.2186088,2.4087751 64.3 0 0 0.69727,-1.775 q -0.57049,-7.3742 1.26779,-14.5794 z"
     id="path2201"
     style="stroke-width:2.11296" />
  <path
     fill="#ffd853"
     d="m 415.27961,1180.6398 h 84.51842 q 3.23283,1.6482 -0.65502,1.8593 a 0.88744347,0.82405466 81.8 0 0 -0.73954,1.0566 q 0.48599,2.4931 -2.19748,3.9723 -3.67655,2.0284 -3.23283,6.7827 a 1.9227943,1.8805349 69.7 0 1 -0.78179,1.7326 q -3.7822,2.6412 -4.96546,6.2543 a 1.2466468,1.288906 7.9 0 1 -1.141,0.8875 q -6.86711,0.4226 1.43682,0.6973 1.16212,0.043 0.0422,0.3803 -3.19056,0.9508 -7.31084,0.5916 -6.25436,-0.5494 -17.43193,0.4437 h -59.16291 q 1.69038,-1.627 4.26818,-1.3311 2.66234,0.2958 -1.14098,-0.5071 a 0.88744347,0.88744347 0 0 1 -0.52824,-1.4157 q 4.47947,-5.8741 3.73993,-12.6566 a 2.8736264,2.7468487 60.6 0 1 0.48598,-1.9018 z"
     id="path2203"
     style="stroke-width:2.11296" />
  <path
     fill="#ffc63f"
     d="m 499.79803,1180.6398 h 76.06658 l 7.43762,4.4584 a 0.6550178,0.69727702 45.4 0 1 -0.0422,1.1409 q -4.31044,2.768 -1.26778,6.2333 a 1.4156837,1.3945541 40.4 0 1 0.14791,1.648 q -2.2186,3.4653 -2.5778,7.5645 a 1.5847205,1.5847205 0 0 1 -1.52134,1.4369 q -13.8399,0.3591 -6.40227,0.4224 17.15724,0.1902 34.33561,0.3382 -34.77933,1.0987 -41.73097,0.9719 -21.27752,-0.3804 -31.6944,0.4437 h -69.7277 q 11.17756,-0.9931 17.43192,-0.4437 4.12027,0.3592 7.31083,-0.5916 1.11987,-0.338 -0.0422,-0.3803 -8.30394,-0.2747 -1.43682,-0.6973 a 1.2466468,1.288906 7.9 0 0 1.141,-0.8875 q 1.18326,-3.6131 4.96545,-6.2543 a 1.9227943,1.8805349 69.7 0 0 0.7818,-1.7326 q -0.44371,-4.7543 3.23283,-6.7827 2.68347,-1.4792 2.19748,-3.9723 a 0.88744347,0.82405466 81.8 0 1 0.73954,-1.0566 q 3.88785,-0.2111 0.65502,-1.8593 z"
     id="path2205"
     style="stroke-width:2.11296" />
  <path
     fill="#feab2d"
     d="m 575.86461,1180.6398 172.73452,0.3593 q 6.74037,-1.2256 8.32508,3.3806 2.91589,8.5787 -1.98619,19.3336 l -5.2824,0.6973 q -8.49409,0.317 -12.14952,-0.6129 -4.07802,-1.0352 -6.86711,0.084 H 657.2136 q -9.00122,-2.3666 -17.96016,-0.5282 l -33.27914,0.5282 q -17.17837,-0.148 -34.3356,-0.3382 -7.43763,-0.063 6.40227,-0.4225 a 1.5847205,1.5847205 0 0 0 1.52133,-1.4369 q 0.3592,-4.0991 2.5778,-7.5644 a 1.4156837,1.3945541 40.4 0 0 -0.14791,-1.6481 q -3.04266,-3.4652 1.26778,-6.2333 a 0.6550178,0.69727702 45.4 0 0 0.0422,-1.1409 z"
     id="path2207"
     style="stroke-width:2.11296" />
  <text
     xml:space="preserve"
     style="font-style:normal;font-weight:normal;font-size:91.991px;line-height:0.95;font-family:sans-serif;fill:#feb300;fill-opacity:1;stroke:none;stroke-width:1.07802"
     x="63.197884"
     y="1301.2131"
     id="text2780"><tspan
       sodipodi:role="line"
       x="63.197884"
       y="1301.2131"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:133.333px;font-family:Vivaldi;-inkscape-font-specification:Vivaldi;letter-spacing:3px;fill:#feb300;fill-opacity:1;stroke-width:1.07802"
       id="tspan2784">  Investeerimiskeskus</tspan><tspan
       sodipodi:role="line"
       x="63.197884"
       y="1404.847"
       style="font-style:italic;font-variant:normal;font-weight:normal;font-stretch:condensed;font-size:96px;font-family:Vivaldi;-inkscape-font-specification:'Vivaldi Italic Condensed';fill:#feb300;fill-opacity:1;stroke-width:1.07802"
       id="tspan2790">Kõik investeerimisest kinisvarasse</tspan></text>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
